{"ast":null,"code":"var _jsxFileName = \"/Users/rodrigo/Git Repositories/EnterpriseCashFlow/src/components/Charts/CashFlowComponentsChart.jsx\";\nimport React from 'react';\nimport { PERIOD_TYPES } from '../../utils/constants';\nimport { formatCurrency } from '../../utils/formatters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CashFlowComponentsChart({\n  calculatedData,\n  periodType\n}) {\n  var _PERIOD_TYPES$periodT;\n  if (typeof window.Recharts === 'undefined') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border rounded-md bg-red-50 text-red-700\",\n      children: \"Erro: Biblioteca de gr\\xE1ficos (Recharts) n\\xE3o carregada.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    BarChart,\n    Bar,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    ResponsiveContainer,\n    LabelList,\n    ReferenceLine\n  } = window.Recharts;\n  if (!calculatedData || calculatedData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-slate-500 py-4\",\n      children: \"Dados insuficientes para o gr\\xE1fico de Componentes do Fluxo de Caixa.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Using data from the latest period for this visual\n  const latestPeriod = calculatedData[calculatedData.length - 1];\n\n  // Data for a stacked/grouped bar chart.\n  // Positive values are inflows, negative are outflows.\n  const chartData = [{\n    name: 'FCO',\n    value: latestPeriod.operatingCashFlow,\n    fill: '#22c55e'\n  },\n  // green-500\n  {\n    name: 'Invest. CG',\n    value: -latestPeriod.workingCapitalChange,\n    fill: '#f97316'\n  },\n  // orange-500 (negative if investment)\n  {\n    name: 'CAPEX',\n    value: -latestPeriod.capitalExpenditures,\n    fill: '#ef4444'\n  },\n  // red-500\n  {\n    name: 'Financiamentos',\n    value: latestPeriod.cashFlowFromFinancing,\n    fill: '#3b82f6'\n  },\n  // blue-500\n  {\n    name: 'Var. Líq. Caixa',\n    value: latestPeriod.netChangeInCash,\n    fill: '#6b7280',\n    isTotal: true\n  } // gray-500\n  ];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded-lg shadow-md border border-slate-200 h-[350px] md:h-[400px] w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-md font-semibold text-slate-700 mb-4 text-center\",\n      children: [\"Principais Componentes do Fluxo de Caixa (\\xDAltimo Per\\xEDodo: \", ((_PERIOD_TYPES$periodT = PERIOD_TYPES[periodType]) === null || _PERIOD_TYPES$periodT === void 0 ? void 0 : _PERIOD_TYPES$periodT.shortLabel) || 'Per.', \" \", calculatedData.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: chartData,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#e0e0e0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\",\n          tick: {\n            fontSize: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          tickFormatter: tick => formatCurrency(tick, false),\n          tick: {\n            fontSize: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          formatter: value => formatCurrency(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n          y: 0,\n          stroke: \"#6b7280\",\n          strokeDasharray: \"2 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"value\",\n          children: [chartData.map((entry, index) => /*#__PURE__*/_jsxDEV(Bar, {\n            fill: entry.fill\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(LabelList, {\n            dataKey: \"value\",\n            position: \"top\",\n            formatter: value => formatCurrency(value, false),\n            style: {\n              fontSize: '10px',\n              fill: '#333'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = CashFlowComponentsChart;\nvar _c;\n$RefreshReg$(_c, \"CashFlowComponentsChart\");","map":{"version":3,"names":["React","PERIOD_TYPES","formatCurrency","jsxDEV","_jsxDEV","CashFlowComponentsChart","calculatedData","periodType","_PERIOD_TYPES$periodT","window","Recharts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","LabelList","ReferenceLine","length","latestPeriod","chartData","name","value","operatingCashFlow","fill","workingCapitalChange","capitalExpenditures","cashFlowFromFinancing","netChangeInCash","isTotal","shortLabel","width","height","data","margin","top","right","left","bottom","strokeDasharray","stroke","dataKey","tick","fontSize","tickFormatter","formatter","y","map","entry","index","position","style","_c","$RefreshReg$"],"sources":["/Users/rodrigo/Git Repositories/EnterpriseCashFlow/src/components/Charts/CashFlowComponentsChart.jsx"],"sourcesContent":["import React from 'react';\nimport { PERIOD_TYPES } from '../../utils/constants';\nimport { formatCurrency } from '../../utils/formatters';\n\nexport default function CashFlowComponentsChart({ calculatedData, periodType }) {\n  if (typeof window.Recharts === 'undefined') {\n    return <div className=\"p-4 border rounded-md bg-red-50 text-red-700\">Erro: Biblioteca de gráficos (Recharts) não carregada.</div>;\n  }\n  const { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, LabelList, ReferenceLine } = window.Recharts;\n\n  if (!calculatedData || calculatedData.length === 0) {\n    return <p className=\"text-center text-slate-500 py-4\">Dados insuficientes para o gráfico de Componentes do Fluxo de Caixa.</p>;\n  }\n\n  // Using data from the latest period for this visual\n  const latestPeriod = calculatedData[calculatedData.length - 1];\n\n  // Data for a stacked/grouped bar chart.\n  // Positive values are inflows, negative are outflows.\n  const chartData = [\n    { name: 'FCO', value: latestPeriod.operatingCashFlow, fill: '#22c55e' }, // green-500\n    { name: 'Invest. CG', value: -latestPeriod.workingCapitalChange, fill: '#f97316' }, // orange-500 (negative if investment)\n    { name: 'CAPEX', value: -latestPeriod.capitalExpenditures, fill: '#ef4444' }, // red-500\n    { name: 'Financiamentos', value: latestPeriod.cashFlowFromFinancing, fill: '#3b82f6' }, // blue-500\n    { name: 'Var. Líq. Caixa', value: latestPeriod.netChangeInCash, fill: '#6b7280', isTotal: true }, // gray-500\n  ];\n\n  return (\n    <div className=\"bg-white p-4 rounded-lg shadow-md border border-slate-200 h-[350px] md:h-[400px] w-full\">\n      <h4 className=\"text-md font-semibold text-slate-700 mb-4 text-center\">\n        Principais Componentes do Fluxo de Caixa (Último Período: {PERIOD_TYPES[periodType]?.shortLabel || 'Per.'} {calculatedData.length})\n      </h4>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          data={chartData}\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e0e0e0\"/>\n          <XAxis dataKey=\"name\" tick={{ fontSize: 10 }}/>\n          <YAxis tickFormatter={(tick) => formatCurrency(tick, false)} tick={{ fontSize: 10 }}/>\n          <Tooltip formatter={(value) => formatCurrency(value)} />\n          <ReferenceLine y={0} stroke=\"#6b7280\" strokeDasharray=\"2 2\" />\n          <Bar dataKey=\"value\">\n            {chartData.map((entry, index) => (\n              <Bar key={`cell-${index}`} fill={entry.fill} />\n            ))}\n            <LabelList\n              dataKey=\"value\"\n              position=\"top\"\n              formatter={(value) => formatCurrency(value, false)}\n              style={{ fontSize: '10px', fill: '#333' }}\n            />\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}