{"ast":null,"code":"var _jsxFileName = \"/Users/rodrigo/Git Repositories/EnterpriseCashFlow/src/components/Charts/MarginTrendChart.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { PERIOD_TYPES } from '../../utils/constants';\nimport { RechartsWrapper, useRecharts } from './RechartsWrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MarginTrendChart({\n  calculatedData,\n  periodType\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded-lg shadow-md border border-slate-200 h-[350px] md:h-[400px] w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-md font-semibold text-slate-700 mb-4 text-center\",\n      children: \"Tend\\xEAncia das Margens Chave (%)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RechartsWrapper, {\n      children: /*#__PURE__*/_jsxDEV(MarginTrendChartContent, {\n        calculatedData: calculatedData,\n        periodType: periodType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = MarginTrendChart;\nfunction MarginTrendChartContent({\n  calculatedData,\n  periodType\n}) {\n  _s();\n  var _PERIOD_TYPES$periodT2;\n  // Get Recharts components safely\n  const {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    ResponsiveContainer,\n    Label\n  } = useRecharts();\n  if (!calculatedData || calculatedData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-slate-500 py-4\",\n      children: \"Dados insuficientes para exibir o gr\\xE1fico de tend\\xEAncias de margens.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  const chartData = calculatedData.map((period, index) => {\n    var _PERIOD_TYPES$periodT, _period$gmPct, _period$opProfitPct, _period$netProfitPct;\n    return {\n      name: `${((_PERIOD_TYPES$periodT = PERIOD_TYPES[periodType]) === null || _PERIOD_TYPES$periodT === void 0 ? void 0 : _PERIOD_TYPES$periodT.shortLabel) || 'Per.'} ${index + 1}`,\n      \"Margem Bruta %\": parseFloat((_period$gmPct = period.gmPct) === null || _period$gmPct === void 0 ? void 0 : _period$gmPct.toFixed(2)) || 0,\n      \"Margem Oper. (EBIT) %\": parseFloat((_period$opProfitPct = period.opProfitPct) === null || _period$opProfitPct === void 0 ? void 0 : _period$opProfitPct.toFixed(2)) || 0,\n      \"Margem Líquida %\": parseFloat((_period$netProfitPct = period.netProfitPct) === null || _period$netProfitPct === void 0 ? void 0 : _period$netProfitPct.toFixed(2)) || 0\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: \"100%\",\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      data: chartData,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 0,\n        bottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        stroke: \"#e0e0e0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\",\n        tick: {\n          fontSize: 12\n        },\n        children: /*#__PURE__*/_jsxDEV(Label, {\n          value: `Períodos (${((_PERIOD_TYPES$periodT2 = PERIOD_TYPES[periodType]) === null || _PERIOD_TYPES$periodT2 === void 0 ? void 0 : _PERIOD_TYPES$periodT2.label) || periodType})`,\n          offset: -15,\n          position: \"insideBottom\",\n          style: {\n            fontSize: 12\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        tickFormatter: tick => `${tick}%`,\n        tick: {\n          fontSize: 12\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        formatter: (value, name) => [`${Number(value).toFixed(2)}%`, name],\n        labelStyle: {\n          fontSize: 13,\n          fontWeight: 'bold'\n        },\n        itemStyle: {\n          fontSize: 12\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {\n        wrapperStyle: {\n          fontSize: \"12px\",\n          paddingTop: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"Margem Bruta %\",\n        stroke: \"#3b82f6\" // Tailwind blue-500\n        ,\n        strokeWidth: 2,\n        activeDot: {\n          r: 6,\n          strokeWidth: 0,\n          fill: '#3b82f6'\n        },\n        dot: {\n          r: 4,\n          strokeWidth: 0,\n          fill: '#3b82f6'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"Margem Oper. (EBIT) %\",\n        stroke: \"#10b981\" // Tailwind emerald-500\n        ,\n        strokeWidth: 2,\n        activeDot: {\n          r: 6,\n          strokeWidth: 0,\n          fill: '#10b981'\n        },\n        dot: {\n          r: 4,\n          strokeWidth: 0,\n          fill: '#10b981'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"Margem L\\xEDquida %\",\n        stroke: \"#f59e0b\" // Tailwind amber-500\n        ,\n        strokeWidth: 2,\n        activeDot: {\n          r: 6,\n          strokeWidth: 0,\n          fill: '#f59e0b'\n        },\n        dot: {\n          r: 4,\n          strokeWidth: 0,\n          fill: '#f59e0b'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(MarginTrendChartContent, \"XErGsqYZaccM5wGSmoKo7HoAcck=\", false, function () {\n  return [useRecharts];\n});\n_c2 = MarginTrendChartContent;\nvar _c, _c2;\n$RefreshReg$(_c, \"MarginTrendChart\");\n$RefreshReg$(_c2, \"MarginTrendChartContent\");","map":{"version":3,"names":["React","PERIOD_TYPES","RechartsWrapper","useRecharts","jsxDEV","_jsxDEV","MarginTrendChart","calculatedData","periodType","className","children","fileName","_jsxFileName","lineNumber","columnNumber","MarginTrendChartContent","_c","_s","_PERIOD_TYPES$periodT2","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Label","length","chartData","map","period","index","_PERIOD_TYPES$periodT","_period$gmPct","_period$opProfitPct","_period$netProfitPct","name","shortLabel","parseFloat","gmPct","toFixed","opProfitPct","netProfitPct","width","height","data","margin","top","right","left","bottom","strokeDasharray","stroke","dataKey","tick","fontSize","value","label","offset","position","style","tickFormatter","formatter","Number","labelStyle","fontWeight","itemStyle","wrapperStyle","paddingTop","type","strokeWidth","activeDot","r","fill","dot","_c2","$RefreshReg$"],"sources":["/Users/rodrigo/Git Repositories/EnterpriseCashFlow/src/components/Charts/MarginTrendChart.jsx"],"sourcesContent":["import React from 'react';\nimport { PERIOD_TYPES } from '../../utils/constants';\nimport { RechartsWrapper, useRecharts } from './RechartsWrapper';\n\nexport default function MarginTrendChart({ calculatedData, periodType }) {\n  return (\n    <div className=\"bg-white p-4 rounded-lg shadow-md border border-slate-200 h-[350px] md:h-[400px] w-full\">\n      <h4 className=\"text-md font-semibold text-slate-700 mb-4 text-center\">\n        Tendência das Margens Chave (%)\n      </h4>\n      \n      <RechartsWrapper>\n        <MarginTrendChartContent calculatedData={calculatedData} periodType={periodType} />\n      </RechartsWrapper>\n    </div>\n  );\n}\n\nfunction MarginTrendChartContent({ calculatedData, periodType }) {\n  // Get Recharts components safely\n  const { \n    LineChart, Line, XAxis, YAxis, CartesianGrid, \n    Tooltip, Legend, ResponsiveContainer, Label \n  } = useRecharts();\n\n  if (!calculatedData || calculatedData.length === 0) {\n    return <p className=\"text-center text-slate-500 py-4\">Dados insuficientes para exibir o gráfico de tendências de margens.</p>;\n  }\n\n  const chartData = calculatedData.map((period, index) => ({\n    name: `${PERIOD_TYPES[periodType]?.shortLabel || 'Per.'} ${index + 1}`,\n    \"Margem Bruta %\": parseFloat(period.gmPct?.toFixed(2)) || 0,\n    \"Margem Oper. (EBIT) %\": parseFloat(period.opProfitPct?.toFixed(2)) || 0,\n    \"Margem Líquida %\": parseFloat(period.netProfitPct?.toFixed(2)) || 0,\n  }));\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <LineChart\n        data={chartData}\n        margin={{ top: 5, right: 30, left: 0, bottom: 20 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e0e0e0\"/>\n        <XAxis dataKey=\"name\" tick={{ fontSize: 12 }}>\n          <Label value={`Períodos (${PERIOD_TYPES[periodType]?.label || periodType})`} offset={-15} position=\"insideBottom\" style={{ fontSize: 12 }}/>\n        </XAxis>\n        <YAxis tickFormatter={(tick) => `${tick}%`} tick={{ fontSize: 12 }} />\n        <Tooltip\n          formatter={(value, name) => [`${Number(value).toFixed(2)}%`, name]}\n          labelStyle={{ fontSize: 13, fontWeight: 'bold' }}\n          itemStyle={{ fontSize: 12 }}\n        />\n        <Legend wrapperStyle={{fontSize: \"12px\", paddingTop: \"10px\"}} />\n        <Line\n          type=\"monotone\"\n          dataKey=\"Margem Bruta %\"\n          stroke=\"#3b82f6\"  // Tailwind blue-500\n          strokeWidth={2}\n          activeDot={{ r: 6, strokeWidth: 0, fill: '#3b82f6' }}\n          dot={{ r: 4, strokeWidth: 0, fill: '#3b82f6' }}\n        />\n        <Line\n          type=\"monotone\"\n          dataKey=\"Margem Oper. (EBIT) %\"\n          stroke=\"#10b981\" // Tailwind emerald-500\n          strokeWidth={2}\n          activeDot={{ r: 6, strokeWidth: 0, fill: '#10b981' }}\n          dot={{ r: 4, strokeWidth: 0, fill: '#10b981' }}\n        />\n        <Line\n          type=\"monotone\"\n          dataKey=\"Margem Líquida %\"\n          stroke=\"#f59e0b\" // Tailwind amber-500\n          strokeWidth={2}\n          activeDot={{ r: 6, strokeWidth: 0, fill: '#f59e0b' }}\n          dot={{ r: 4, strokeWidth: 0, fill: '#f59e0b' }}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}