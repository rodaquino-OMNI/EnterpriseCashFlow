{"ast":null,"code":"var _jsxFileName = \"/Users/rodrigo/Git Repositories/EnterpriseCashFlow/src/components/Charts/CashFlowComponentsChart.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { PERIOD_TYPES } from '../../utils/constants';\nimport { formatCurrency } from '../../utils/formatters';\nimport { RechartsWrapper, useRecharts } from './RechartsWrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CashFlowComponentsChart({\n  calculatedData,\n  periodType\n}) {\n  var _PERIOD_TYPES$periodT;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded-lg shadow-md border border-slate-200 h-[350px] md:h-[400px] w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-md font-semibold text-slate-700 mb-4 text-center\",\n      children: [\"Principais Componentes do Fluxo de Caixa\", calculatedData.length > 0 ? ` (Último Período: ${((_PERIOD_TYPES$periodT = PERIOD_TYPES[periodType]) === null || _PERIOD_TYPES$periodT === void 0 ? void 0 : _PERIOD_TYPES$periodT.shortLabel) || 'Per.'} ${calculatedData.length})` : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RechartsWrapper, {\n      children: /*#__PURE__*/_jsxDEV(CashFlowComponentsChartContent, {\n        calculatedData: calculatedData,\n        periodType: periodType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = CashFlowComponentsChart;\nfunction CashFlowComponentsChartContent({\n  calculatedData,\n  periodType\n}) {\n  _s();\n  const {\n    BarChart,\n    Bar,\n    Cell,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    ReferenceLine,\n    ResponsiveContainer,\n    LabelList\n  } = useRecharts();\n  if (!calculatedData || calculatedData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-slate-500 py-4\",\n      children: \"Dados insuficientes para o gr\\xE1fico de Componentes do Fluxo de Caixa.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Using data from the latest period for this visual\n  const latestPeriod = calculatedData[calculatedData.length - 1];\n\n  // Data for a stacked/grouped bar chart.\n  // Positive values are inflows, negative are outflows.\n  const chartData = [{\n    name: 'FCO',\n    value: latestPeriod.operatingCashFlow,\n    fill: '#22c55e'\n  },\n  // green-500\n  {\n    name: 'Invest. CG',\n    value: -latestPeriod.workingCapitalChange,\n    fill: '#f97316'\n  },\n  // orange-500 (negative if investment)\n  {\n    name: 'CAPEX',\n    value: -latestPeriod.capitalExpenditures,\n    fill: '#ef4444'\n  },\n  // red-500\n  {\n    name: 'Financiamentos',\n    value: latestPeriod.cashFlowFromFinancing,\n    fill: '#3b82f6'\n  },\n  // blue-500\n  {\n    name: 'Var. Líq. Caixa',\n    value: latestPeriod.netChangeInCash,\n    fill: '#6b7280',\n    isTotal: true\n  } // gray-500\n  ];\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: \"100%\",\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      data: chartData,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\",\n        stroke: \"#e0e0e0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\",\n        tick: {\n          fontSize: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        tickFormatter: tick => formatCurrency(tick, false),\n        tick: {\n          fontSize: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        formatter: value => formatCurrency(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n        y: 0,\n        stroke: \"#6b7280\",\n        strokeDasharray: \"2 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"value\",\n        children: [chartData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n          fill: entry.fill\n        }, `cell-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(LabelList, {\n          dataKey: \"value\",\n          position: \"top\",\n          formatter: value => formatCurrency(value, false),\n          style: {\n            fontSize: '10px',\n            fill: '#333'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(CashFlowComponentsChartContent, \"NYneJRiTBYXq53xOVYJdNYhO3+A=\", false, function () {\n  return [useRecharts];\n});\n_c2 = CashFlowComponentsChartContent;\nvar _c, _c2;\n$RefreshReg$(_c, \"CashFlowComponentsChart\");\n$RefreshReg$(_c2, \"CashFlowComponentsChartContent\");","map":{"version":3,"names":["React","PERIOD_TYPES","formatCurrency","RechartsWrapper","useRecharts","jsxDEV","_jsxDEV","CashFlowComponentsChart","calculatedData","periodType","_PERIOD_TYPES$periodT","className","children","length","shortLabel","fileName","_jsxFileName","lineNumber","columnNumber","CashFlowComponentsChartContent","_c","_s","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","ReferenceLine","ResponsiveContainer","LabelList","latestPeriod","chartData","name","value","operatingCashFlow","fill","workingCapitalChange","capitalExpenditures","cashFlowFromFinancing","netChangeInCash","isTotal","width","height","data","margin","top","right","left","bottom","strokeDasharray","stroke","dataKey","tick","fontSize","tickFormatter","formatter","y","map","entry","index","position","style","_c2","$RefreshReg$"],"sources":["/Users/rodrigo/Git Repositories/EnterpriseCashFlow/src/components/Charts/CashFlowComponentsChart.jsx"],"sourcesContent":["import React from 'react';\nimport { PERIOD_TYPES } from '../../utils/constants';\nimport { formatCurrency } from '../../utils/formatters';\nimport { RechartsWrapper, useRecharts } from './RechartsWrapper';\n\nexport default function CashFlowComponentsChart({ calculatedData, periodType }) {\n  return (\n    <div className=\"bg-white p-4 rounded-lg shadow-md border border-slate-200 h-[350px] md:h-[400px] w-full\">\n      <h4 className=\"text-md font-semibold text-slate-700 mb-4 text-center\">\n        Principais Componentes do Fluxo de Caixa\n        {calculatedData.length > 0 ? ` (Último Período: ${PERIOD_TYPES[periodType]?.shortLabel || 'Per.'} ${calculatedData.length})` : ''}\n      </h4>\n      \n      <RechartsWrapper>\n        <CashFlowComponentsChartContent calculatedData={calculatedData} periodType={periodType} />\n      </RechartsWrapper>\n    </div>\n  );\n}\n\nfunction CashFlowComponentsChartContent({ calculatedData, periodType }) {\n  const { \n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, \n    Tooltip, ReferenceLine, ResponsiveContainer, LabelList \n  } = useRecharts();\n\n  if (!calculatedData || calculatedData.length === 0) {\n    return <p className=\"text-center text-slate-500 py-4\">Dados insuficientes para o gráfico de Componentes do Fluxo de Caixa.</p>;\n  }\n\n  // Using data from the latest period for this visual\n  const latestPeriod = calculatedData[calculatedData.length - 1];\n\n  // Data for a stacked/grouped bar chart.\n  // Positive values are inflows, negative are outflows.\n  const chartData = [\n    { name: 'FCO', value: latestPeriod.operatingCashFlow, fill: '#22c55e' }, // green-500\n    { name: 'Invest. CG', value: -latestPeriod.workingCapitalChange, fill: '#f97316' }, // orange-500 (negative if investment)\n    { name: 'CAPEX', value: -latestPeriod.capitalExpenditures, fill: '#ef4444' }, // red-500\n    { name: 'Financiamentos', value: latestPeriod.cashFlowFromFinancing, fill: '#3b82f6' }, // blue-500\n    { name: 'Var. Líq. Caixa', value: latestPeriod.netChangeInCash, fill: '#6b7280', isTotal: true }, // gray-500\n  ];\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <BarChart\n        data={chartData}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e0e0e0\"/>\n        <XAxis dataKey=\"name\" tick={{ fontSize: 10 }}/>\n        <YAxis tickFormatter={(tick) => formatCurrency(tick, false)} tick={{ fontSize: 10 }}/>\n        <Tooltip formatter={(value) => formatCurrency(value)} />\n        <ReferenceLine y={0} stroke=\"#6b7280\" strokeDasharray=\"2 2\" />\n        <Bar dataKey=\"value\">\n          {chartData.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={entry.fill} />\n          ))}\n          <LabelList\n            dataKey=\"value\"\n            position=\"top\"\n            formatter={(value) => formatCurrency(value, false)}\n            style={{ fontSize: '10px', fill: '#333' }}\n          />\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}