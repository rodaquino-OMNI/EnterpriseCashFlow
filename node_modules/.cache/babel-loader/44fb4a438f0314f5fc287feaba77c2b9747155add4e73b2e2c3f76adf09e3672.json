{"ast":null,"code":"var _jsxFileName = \"/Users/rodrigo/Git Repositories/EnterpriseCashFlow/src/components/ReportPanel/ReportRenderer.jsx\",\n  _s = $RefreshSig$();\n// src/components/ReportPanel/ReportRenderer.jsx\nimport React, { useState, useRef } from 'react';\nimport { PERIOD_TYPES } from '../../utils/constants';\nimport { formatCurrency, formatPercentage } from '../../utils/formatters';\nimport AIPanel from '../AIPanel/AIPanel';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReportRenderer({\n  calculatedData,\n  companyInfo,\n  onLoadHtml2pdf,\n  html2pdfError\n}) {\n  _s();\n  var _PERIOD_TYPES$periodT, _PERIOD_TYPES$periodT2, _PERIOD_TYPES$periodT3;\n  const [reportViewMode, setReportViewMode] = useState('general'); // 'general', 'detailed', 'ai'\n  const reportRef = useRef(null);\n  const [printingPdf, setPrintingPdf] = useState(false);\n  const [pdfError, setPdfError] = useState(null);\n  const {\n    name: companyName,\n    reportTitle,\n    periodType\n  } = companyInfo;\n  const periodLabel = ((_PERIOD_TYPES$periodT = PERIOD_TYPES[periodType]) === null || _PERIOD_TYPES$periodT === void 0 ? void 0 : _PERIOD_TYPES$periodT.shortLabel) || periodType;\n  const generatePeriodHeaders = (withTrend = true) => {\n    // Generate header cells for periods and trend if needed\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [calculatedData.map((_, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n        className: \"border p-2 text-center whitespace-nowrap bg-blue-50\",\n        children: [\"P\", idx + 1, \" (\", periodLabel, \")\"]\n      }, `period-${idx}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)), withTrend && calculatedData.length > 1 && /*#__PURE__*/_jsxDEV(\"th\", {\n        className: \"border p-2 text-center whitespace-nowrap bg-blue-100\",\n        children: \"Tend\\xEAncia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  };\n  const handleExportPdf = async () => {\n    setPrintingPdf(true);\n    setPdfError(null);\n    try {\n      const html2pdf = await onLoadHtml2pdf();\n      if (!html2pdf) {\n        throw new Error('Biblioteca html2pdf não pôde ser carregada.');\n      }\n\n      // Set view mode to 'detailed' for export to ensure all content is included\n      setReportViewMode('detailed');\n      setTimeout(() => {\n        // Allow time for React to update the DOM with detailed view\n        const element = reportRef.current;\n        if (!element) {\n          throw new Error('Elemento do relatório não encontrado.');\n        }\n\n        // Apply PDF export specific styling\n        document.body.classList.add('printing');\n\n        // Configure html2pdf options\n        const opt = {\n          margin: 10,\n          filename: `${companyName.replace(/\\s+/g, '_')}_Relatorio_Financeiro.pdf`,\n          image: {\n            type: 'jpeg',\n            quality: 0.98\n          },\n          html2canvas: {\n            scale: 2,\n            // Better quality\n            useCORS: true,\n            scrollY: -window.scrollY // Important to avoid scrolling issues\n          },\n          jsPDF: {\n            unit: 'mm',\n            format: 'a4',\n            orientation: 'portrait',\n            compress: true\n          },\n          pagebreak: {\n            mode: ['avoid-all', 'css', 'legacy']\n          }\n        };\n        html2pdf().from(element).set(opt).save().then(() => {\n          document.body.classList.remove('printing');\n          setPrintingPdf(false);\n        }).catch(error => {\n          console.error('Erro na geração do PDF:', error);\n          setPdfError(error);\n          document.body.classList.remove('printing');\n          setPrintingPdf(false);\n        });\n      }, 50);\n    } catch (error) {\n      console.error('Erro ao exportar para PDF:', error);\n      setPdfError(error);\n      setPrintingPdf(false);\n    }\n  };\n\n  // Translate field key to Portuguese display label\n  const getColumnLabel = key => {\n    switch (key) {\n      case 'revenue':\n        return 'Receita';\n      case 'cogs':\n        return 'Custo de Vendas';\n      case 'grossProfit':\n        return 'Lucro Bruto';\n      case 'gmPct':\n        return 'Margem Bruta (%)';\n      case 'operatingExpenses':\n        return 'Despesas Operacionais';\n      case 'ebitda':\n        return 'EBITDA';\n      case 'depreciationAndAmortisation':\n        return 'Depreciação e Amortização';\n      case 'ebit':\n        return 'EBIT (Res. Operacional)';\n      case 'netInterestExpenseIncome':\n        return 'Despesas/Receitas Financeiras';\n      case 'extraordinaryItems':\n        return 'Itens Extraordinários';\n      case 'pbt':\n        return 'Lucro Antes dos Impostos';\n      case 'incomeTax':\n        return 'Impostos s/ Lucro';\n      case 'netProfit':\n        return 'Lucro Líquido';\n      case 'netProfitPct':\n        return 'Margem Líquida (%)';\n      // Balance Sheet\n      case 'openingCash':\n        return 'Saldo Inicial de Caixa';\n      case 'closingCash':\n        return 'Saldo Final de Caixa';\n      case 'accountsReceivableValueAvg':\n        return 'Contas a Receber';\n      case 'inventoryValue':\n        return 'Estoque';\n      case 'accountsPayableValueAvg':\n        return 'Contas a Pagar';\n      case 'workingCapitalValue':\n        return 'Capital de Giro';\n      case 'workingCapitalChange':\n        return 'Variação do Capital de Giro';\n      case 'netFixedAssets':\n        return 'Ativo Imobilizado';\n      case 'totalBankLoans':\n        return 'Empréstimos Bancários';\n      case 'equity':\n        return 'Patrimônio Líquido';\n      // Cash Flow\n      case 'operatingCashFlow':\n        return 'Fluxo de Caixa Operacional';\n      case 'cashFromOpsAfterWC':\n        return 'Fluxo Operacional após WC';\n      case 'capitalExpenditures':\n        return 'CAPEX';\n      case 'netCashFlowBeforeFinancing':\n        return 'Fluxo antes de Financiamentos';\n      case 'changeInDebt':\n        return 'Variação de Empréstimos';\n      case 'dividendsPaid':\n        return 'Dividendos Pagos';\n      case 'cashFlowFromFinancing':\n        return 'Fluxo de Financiamentos';\n      case 'netChangeInCash':\n        return 'Variação Líquida de Caixa';\n      case 'fundingGapOrSurplus':\n        return 'Gap de Financiamento';\n      default:\n        return key;\n    }\n  };\n\n  // Determine if a value should be shown as a percentage\n  const isPercentageField = key => {\n    return key.toLowerCase().includes('pct') || key.toLowerCase().includes('margin') || key === 'incomeTaxRatePercentageActual';\n  };\n\n  // Determine if a value should use currency formatting\n  const isCurrencyField = key => {\n    // Fields that contain time/day metrics shouldn't be formatted as currency\n    const notCurrency = ['days', 'arDaysDerived', 'apDaysDerived', 'wcDays', 'inventoryDaysInput', 'incomeTaxRatePercentageActual'];\n    if (notCurrency.some(fragment => key.includes(fragment)) || isPercentageField(key)) {\n      return false;\n    }\n\n    // Most values in finance contexts are currency, unless specified otherwise\n    return true;\n  };\n\n  // Format cell value according to its type\n  const formatCellValue = (key, value) => {\n    if (value === null || value === undefined) return 'N/A';\n    if (isPercentageField(key)) return formatPercentage(value);\n    if (key.includes('days') || key === 'arDaysDerived' || key === 'apDaysDerived' || key === 'wcDays') {\n      return value.toFixed(1) + ' dias';\n    }\n    if (isCurrencyField(key)) return formatCurrency(value);\n    return value.toFixed(2);\n  };\n\n  // Calculate simple trend indicator for a series of values\n  const getTrendIndicator = values => {\n    if (values.length < 2) return '—';\n    const firstValid = values.find(v => v !== null && v !== undefined);\n    const lastValid = [...values].reverse().find(v => v !== null && v !== undefined);\n    if (firstValid === undefined || lastValid === undefined) return '—';\n    const diff = lastValid - firstValid;\n    if (Math.abs(diff) < 0.001) return '→';\n    return diff > 0 ? '↗' : '↘';\n  };\n  const renderProfitLossTable = () => /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"min-w-full border-collapse mb-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          colSpan: calculatedData.length + 2,\n          className: \"border bg-blue-600 text-white p-2 text-center\",\n          children: \"Demonstra\\xE7\\xE3o de Resultados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"border p-2 text-left bg-blue-50\",\n          children: \"Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), generatePeriodHeaders()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: ['revenue', 'cogs', 'grossProfit', 'gmPct', 'operatingExpenses', 'ebitda', 'depreciationAndAmortisation', 'ebit', 'netInterestExpenseIncome', 'extraordinaryItems', 'pbt', 'incomeTax', 'netProfit', 'netProfitPct'].map(key => {\n        const values = calculatedData.map(p => p[key]);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"hover:bg-slate-50\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border p-2 font-medium\",\n            children: getColumnLabel(key)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), values.map((value, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border p-2 text-right\",\n            children: formatCellValue(key, value)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this)), values.length > 1 && /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border p-2 text-center\",\n            children: getTrendIndicator(values)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n  const renderCashFlowTable = () => /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"min-w-full border-collapse mb-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          colSpan: calculatedData.length + 2,\n          className: \"border bg-blue-600 text-white p-2 text-center\",\n          children: \"Fluxo de Caixa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"border p-2 text-left bg-blue-50\",\n          children: \"Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), generatePeriodHeaders()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: ['openingCash', 'operatingCashFlow', 'workingCapitalChange', 'cashFromOpsAfterWC', 'capitalExpenditures', 'netCashFlowBeforeFinancing', 'changeInDebt', 'dividendsPaid', 'cashFlowFromFinancing', 'netChangeInCash', 'closingCash'].map(key => {\n        const values = calculatedData.map(p => p[key]);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"hover:bg-slate-50\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border p-2 font-medium\",\n            children: getColumnLabel(key)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), values.map((value, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border p-2 text-right\",\n            children: formatCellValue(key, value)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 17\n          }, this)), values.length > 1 && /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border p-2 text-center\",\n            children: getTrendIndicator(values)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 17\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n  const renderWorkingCapitalTable = () => /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"min-w-full border-collapse mb-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          colSpan: calculatedData.length + 2,\n          className: \"border bg-blue-600 text-white p-2 text-center\",\n          children: \"An\\xE1lise de Capital de Giro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"border p-2 text-left bg-blue-50\",\n          children: \"Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), generatePeriodHeaders()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: ['accountsReceivableValueAvg', 'arDaysDerived', 'inventoryValue', 'inventoryDaysInput', 'accountsPayableValueAvg', 'apDaysDerived', 'workingCapitalValue', 'wcDays', 'workingCapitalChange'].map(key => {\n        const values = calculatedData.map(p => p[key]);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"hover:bg-slate-50\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border p-2 font-medium\",\n            children: getColumnLabel(key)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), values.map((value, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border p-2 text-right\",\n            children: formatCellValue(key, value)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 17\n          }, this)), values.length > 1 && /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border p-2 text-center\",\n            children: getTrendIndicator(values)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n  const renderBalanceSheetTable = () => /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"min-w-full border-collapse mb-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          colSpan: calculatedData.length + 2,\n          className: \"border bg-blue-600 text-white p-2 text-center\",\n          children: \"Balan\\xE7o Patrimonial (Simplificado)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"border p-2 text-left bg-blue-50\",\n          children: \"Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), generatePeriodHeaders()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"bg-blue-50 font-medium\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"border p-2\",\n          children: \"Total Ativos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), calculatedData.map((period, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"border p-2 text-right\",\n          children: formatCurrency(period.estimatedTotalAssets)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this)), calculatedData.length > 1 && /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"border p-2 text-center\",\n          children: getTrendIndicator(calculatedData.map(p => p.estimatedTotalAssets))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), ['closingCash', 'accountsReceivableValueAvg', 'inventoryValue', 'netFixedAssets'].map(key => {\n        const values = calculatedData.map(p => p[key]);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"hover:bg-slate-50\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border p-2 pl-4 font-normal\",\n            children: getColumnLabel(key)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this), values.map((value, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border p-2 text-right\",\n            children: formatCellValue(key, value)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this)), values.length > 1 && /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border p-2 text-center\",\n            children: getTrendIndicator(values)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"bg-blue-50 font-medium\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"border p-2\",\n          children: \"Total Passivos + Patrim\\xF4nio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), calculatedData.map((period, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"border p-2 text-right\",\n          children: formatCurrency(period.estimatedTotalLiabilities + period.equity)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this)), calculatedData.length > 1 && /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"border p-2 text-center\",\n          children: getTrendIndicator(calculatedData.map(p => p.estimatedTotalLiabilities + p.equity))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), ['accountsPayableValueAvg', 'totalBankLoans', 'equity'].map(key => {\n        const values = calculatedData.map(p => p[key]);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"hover:bg-slate-50\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border p-2 pl-4 font-normal\",\n            children: getColumnLabel(key)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this), values.map((value, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border p-2 text-right\",\n            children: formatCellValue(key, value)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 17\n          }, this)), values.length > 1 && /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border p-2 text-center\",\n            children: getTrendIndicator(values)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 17\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"bg-yellow-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"border p-2\",\n          children: \"Diferen\\xE7a de Balan\\xE7o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), calculatedData.map((period, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"border p-2 text-right\",\n          children: formatCurrency(period.balanceSheetDifference)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"border p-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"mt-12\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col md:flex-row justify-between items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-blue-800 mb-3 md:mb-0\",\n        children: \"Relat\\xF3rio Gerado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap justify-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `px-3 py-1.5 rounded text-sm font-medium \n              ${reportViewMode === 'general' ? 'bg-blue-600 text-white' : 'bg-slate-200 text-slate-700 hover:bg-slate-300'}`,\n          onClick: () => setReportViewMode('general'),\n          children: \"Vis\\xE3o Geral\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `px-3 py-1.5 rounded text-sm font-medium \n              ${reportViewMode === 'detailed' ? 'bg-blue-600 text-white' : 'bg-slate-200 text-slate-700 hover:bg-slate-300'}`,\n          onClick: () => setReportViewMode('detailed'),\n          children: \"Vis\\xE3o Detalhada\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `px-3 py-1.5 rounded text-sm font-medium \n              ${reportViewMode === 'ai' ? 'bg-green-600 text-white' : 'bg-slate-200 text-slate-700 hover:bg-slate-300'}`,\n          onClick: () => setReportViewMode('ai'),\n          children: \"Resumo IA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleExportPdf,\n          disabled: printingPdf,\n          className: \"px-3 py-1.5 bg-orange-600 text-white font-medium rounded hover:bg-orange-700 transition disabled:opacity-50 flex items-center gap-1\",\n          children: printingPdf ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"animate-spin h-4 w-4 text-white\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                className: \"opacity-25\",\n                cx: \"12\",\n                cy: \"12\",\n                r: \"10\",\n                stroke: \"currentColor\",\n                strokeWidth: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                className: \"opacity-75\",\n                fill: \"currentColor\",\n                d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this), \"Gerando PDF...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              className: \"h-4 w-4\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: 2,\n                d: \"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this), \"Exportar PDF\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this), pdfError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-3 bg-red-100 border-l-4 border-red-500 text-red-700\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Erro ao gerar PDF: \", pdfError.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 9\n    }, this), html2pdfError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-3 bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Exporta\\xE7\\xE3o para PDF pode n\\xE3o funcionar: \", html2pdfError.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-6 bg-white rounded-xl shadow-lg\",\n      ref: reportRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold mb-3 text-blue-800\",\n          children: companyName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl\",\n          children: reportTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-slate-500 mt-2\",\n          children: [calculatedData.length, \" \", calculatedData.length === 1 ? (_PERIOD_TYPES$periodT2 = PERIOD_TYPES[periodType]) === null || _PERIOD_TYPES$periodT2 === void 0 ? void 0 : _PERIOD_TYPES$periodT2.shortLabel : (_PERIOD_TYPES$periodT3 = PERIOD_TYPES[periodType]) === null || _PERIOD_TYPES$periodT3 === void 0 ? void 0 : _PERIOD_TYPES$periodT3.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this), reportViewMode === 'ai' ? /*#__PURE__*/_jsxDEV(AIPanel, {\n        calculatedData: calculatedData,\n        companyInfo: companyInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [renderProfitLossTable(), renderCashFlowTable(), reportViewMode === 'detailed' && renderWorkingCapitalTable(), reportViewMode === 'detailed' && renderBalanceSheetTable(), reportViewMode === 'detailed' && /*#__PURE__*/_jsxDEV(AIPanel, {\n          calculatedData: calculatedData,\n          companyInfo: companyInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 pt-4 border-t text-center text-slate-500 text-sm\",\n        children: [\"Relat\\xF3rio gerado em \", new Date().toLocaleDateString('pt-BR', {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric',\n          hour: '2-digit',\n          minute: '2-digit'\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 408,\n    columnNumber: 5\n  }, this);\n}\n_s(ReportRenderer, \"gg74ICh+oc/71qIBXsohhaI0oLk=\");\n_c = ReportRenderer;\nvar _c;\n$RefreshReg$(_c, \"ReportRenderer\");","map":{"version":3,"names":["React","useState","useRef","PERIOD_TYPES","formatCurrency","formatPercentage","AIPanel","jsxDEV","_jsxDEV","Fragment","_Fragment","ReportRenderer","calculatedData","companyInfo","onLoadHtml2pdf","html2pdfError","_s","_PERIOD_TYPES$periodT","_PERIOD_TYPES$periodT2","_PERIOD_TYPES$periodT3","reportViewMode","setReportViewMode","reportRef","printingPdf","setPrintingPdf","pdfError","setPdfError","name","companyName","reportTitle","periodType","periodLabel","shortLabel","generatePeriodHeaders","withTrend","children","map","_","idx","className","fileName","_jsxFileName","lineNumber","columnNumber","length","handleExportPdf","html2pdf","Error","setTimeout","element","current","document","body","classList","add","opt","margin","filename","replace","image","type","quality","html2canvas","scale","useCORS","scrollY","window","jsPDF","unit","format","orientation","compress","pagebreak","mode","from","set","save","then","remove","catch","error","console","getColumnLabel","key","isPercentageField","toLowerCase","includes","isCurrencyField","notCurrency","some","fragment","formatCellValue","value","undefined","toFixed","getTrendIndicator","values","firstValid","find","v","lastValid","reverse","diff","Math","abs","renderProfitLossTable","colSpan","p","renderCashFlowTable","renderWorkingCapitalTable","renderBalanceSheetTable","period","estimatedTotalAssets","estimatedTotalLiabilities","equity","balanceSheetDifference","onClick","disabled","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","strokeLinecap","strokeLinejoin","message","ref","label","Date","toLocaleDateString","year","month","day","hour","minute","_c","$RefreshReg$"],"sources":["/Users/rodrigo/Git Repositories/EnterpriseCashFlow/src/components/ReportPanel/ReportRenderer.jsx"],"sourcesContent":["// src/components/ReportPanel/ReportRenderer.jsx\nimport React, { useState, useRef } from 'react';\nimport { PERIOD_TYPES } from '../../utils/constants';\nimport { formatCurrency, formatPercentage } from '../../utils/formatters';\nimport AIPanel from '../AIPanel/AIPanel';\n\nexport default function ReportRenderer({ \n  calculatedData, \n  companyInfo, \n  onLoadHtml2pdf, \n  html2pdfError,\n}) {\n  const [reportViewMode, setReportViewMode] = useState('general'); // 'general', 'detailed', 'ai'\n  const reportRef = useRef(null);\n  const [printingPdf, setPrintingPdf] = useState(false);\n  const [pdfError, setPdfError] = useState(null);\n  const { name: companyName, reportTitle, periodType } = companyInfo;\n  const periodLabel = PERIOD_TYPES[periodType]?.shortLabel || periodType;\n\n  const generatePeriodHeaders = (withTrend = true) => {\n    // Generate header cells for periods and trend if needed\n    return (\n      <>\n        {calculatedData.map((_, idx) => (\n          <th key={`period-${idx}`} className=\"border p-2 text-center whitespace-nowrap bg-blue-50\">\n            P{idx + 1} ({periodLabel})\n          </th>\n        ))}\n        {withTrend && calculatedData.length > 1 && (\n          <th className=\"border p-2 text-center whitespace-nowrap bg-blue-100\">\n            Tendência\n          </th>\n        )}\n      </>\n    );\n  };\n\n  const handleExportPdf = async () => {\n    setPrintingPdf(true);\n    setPdfError(null);\n    try {\n      const html2pdf = await onLoadHtml2pdf();\n      if (!html2pdf) {\n        throw new Error('Biblioteca html2pdf não pôde ser carregada.');\n      }\n      \n      // Set view mode to 'detailed' for export to ensure all content is included\n      setReportViewMode('detailed');\n      \n      setTimeout(() => {\n        // Allow time for React to update the DOM with detailed view\n        const element = reportRef.current;\n        if (!element) {\n          throw new Error('Elemento do relatório não encontrado.');\n        }\n\n        // Apply PDF export specific styling\n        document.body.classList.add('printing');\n        \n        // Configure html2pdf options\n        const opt = {\n          margin: 10,\n          filename: `${companyName.replace(/\\s+/g, '_')}_Relatorio_Financeiro.pdf`,\n          image: { type: 'jpeg', quality: 0.98 },\n          html2canvas: { \n            scale: 2, // Better quality\n            useCORS: true,\n            scrollY: -window.scrollY, // Important to avoid scrolling issues\n          },\n          jsPDF: { \n            unit: 'mm', \n            format: 'a4', \n            orientation: 'portrait',\n            compress: true\n          },\n          pagebreak: { mode: ['avoid-all', 'css', 'legacy'] }\n        };\n        \n        html2pdf()\n          .from(element)\n          .set(opt)\n          .save()\n          .then(() => {\n            document.body.classList.remove('printing');\n            setPrintingPdf(false);\n          })\n          .catch(error => {\n            console.error('Erro na geração do PDF:', error);\n            setPdfError(error);\n            document.body.classList.remove('printing');\n            setPrintingPdf(false);\n          });\n      }, 50);\n      \n    } catch (error) {\n      console.error('Erro ao exportar para PDF:', error);\n      setPdfError(error);\n      setPrintingPdf(false);\n    }\n  };\n\n  // Translate field key to Portuguese display label\n  const getColumnLabel = (key) => {\n    switch(key) {\n      case 'revenue': return 'Receita';\n      case 'cogs': return 'Custo de Vendas';\n      case 'grossProfit': return 'Lucro Bruto';\n      case 'gmPct': return 'Margem Bruta (%)';\n      case 'operatingExpenses': return 'Despesas Operacionais';\n      case 'ebitda': return 'EBITDA';\n      case 'depreciationAndAmortisation': return 'Depreciação e Amortização';\n      case 'ebit': return 'EBIT (Res. Operacional)';\n      case 'netInterestExpenseIncome': return 'Despesas/Receitas Financeiras';\n      case 'extraordinaryItems': return 'Itens Extraordinários';\n      case 'pbt': return 'Lucro Antes dos Impostos';\n      case 'incomeTax': return 'Impostos s/ Lucro';\n      case 'netProfit': return 'Lucro Líquido';\n      case 'netProfitPct': return 'Margem Líquida (%)';\n      // Balance Sheet\n      case 'openingCash': return 'Saldo Inicial de Caixa';\n      case 'closingCash': return 'Saldo Final de Caixa';\n      case 'accountsReceivableValueAvg': return 'Contas a Receber';\n      case 'inventoryValue': return 'Estoque';\n      case 'accountsPayableValueAvg': return 'Contas a Pagar';\n      case 'workingCapitalValue': return 'Capital de Giro';\n      case 'workingCapitalChange': return 'Variação do Capital de Giro';\n      case 'netFixedAssets': return 'Ativo Imobilizado';\n      case 'totalBankLoans': return 'Empréstimos Bancários';\n      case 'equity': return 'Patrimônio Líquido';\n      // Cash Flow\n      case 'operatingCashFlow': return 'Fluxo de Caixa Operacional';\n      case 'cashFromOpsAfterWC': return 'Fluxo Operacional após WC';\n      case 'capitalExpenditures': return 'CAPEX';\n      case 'netCashFlowBeforeFinancing': return 'Fluxo antes de Financiamentos';\n      case 'changeInDebt': return 'Variação de Empréstimos';\n      case 'dividendsPaid': return 'Dividendos Pagos';\n      case 'cashFlowFromFinancing': return 'Fluxo de Financiamentos';\n      case 'netChangeInCash': return 'Variação Líquida de Caixa';\n      case 'fundingGapOrSurplus': return 'Gap de Financiamento';\n      default: return key;\n    }\n  };\n\n  // Determine if a value should be shown as a percentage\n  const isPercentageField = (key) => {\n    return key.toLowerCase().includes('pct') || \n           key.toLowerCase().includes('margin') || \n           key === 'incomeTaxRatePercentageActual';\n  };\n\n  // Determine if a value should use currency formatting\n  const isCurrencyField = (key) => {\n    // Fields that contain time/day metrics shouldn't be formatted as currency\n    const notCurrency = ['days', 'arDaysDerived', 'apDaysDerived', 'wcDays', \n                         'inventoryDaysInput', 'incomeTaxRatePercentageActual'];\n    \n    if (notCurrency.some(fragment => key.includes(fragment)) || isPercentageField(key)) {\n      return false;\n    }\n    \n    // Most values in finance contexts are currency, unless specified otherwise\n    return true;\n  };\n\n  // Format cell value according to its type\n  const formatCellValue = (key, value) => {\n    if (value === null || value === undefined) return 'N/A';\n    if (isPercentageField(key)) return formatPercentage(value);\n    if (key.includes('days') || key === 'arDaysDerived' || key === 'apDaysDerived' || key === 'wcDays') {\n      return value.toFixed(1) + ' dias';\n    }\n    if (isCurrencyField(key)) return formatCurrency(value);\n    return value.toFixed(2);\n  };\n\n  // Calculate simple trend indicator for a series of values\n  const getTrendIndicator = (values) => {\n    if (values.length < 2) return '—';\n    \n    const firstValid = values.find(v => v !== null && v !== undefined);\n    const lastValid = [...values].reverse().find(v => v !== null && v !== undefined);\n    \n    if (firstValid === undefined || lastValid === undefined) return '—';\n    \n    const diff = lastValid - firstValid;\n    if (Math.abs(diff) < 0.001) return '→';\n    \n    return diff > 0 ? '↗' : '↘';\n  };\n\n  const renderProfitLossTable = () => (\n    <table className=\"min-w-full border-collapse mb-8\">\n      <thead>\n        <tr>\n          <th colSpan={calculatedData.length + 2} className=\"border bg-blue-600 text-white p-2 text-center\">\n            Demonstração de Resultados\n          </th>\n        </tr>\n        <tr>\n          <th className=\"border p-2 text-left bg-blue-50\">Item</th>\n          {generatePeriodHeaders()}\n        </tr>\n      </thead>\n      <tbody>\n        {[\n          'revenue', 'cogs', 'grossProfit', 'gmPct', 'operatingExpenses', \n          'ebitda', 'depreciationAndAmortisation', 'ebit', 'netInterestExpenseIncome', \n          'extraordinaryItems', 'pbt', 'incomeTax', 'netProfit', 'netProfitPct'\n        ].map(key => {\n          const values = calculatedData.map(p => p[key]);\n          return (\n            <tr key={key} className=\"hover:bg-slate-50\">\n              <td className=\"border p-2 font-medium\">{getColumnLabel(key)}</td>\n              {values.map((value, idx) => (\n                <td key={idx} className=\"border p-2 text-right\">\n                  {formatCellValue(key, value)}\n                </td>\n              ))}\n              {values.length > 1 && (\n                <td className=\"border p-2 text-center\">\n                  {getTrendIndicator(values)}\n                </td>\n              )}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n\n  const renderCashFlowTable = () => (\n    <table className=\"min-w-full border-collapse mb-8\">\n      <thead>\n        <tr>\n          <th colSpan={calculatedData.length + 2} className=\"border bg-blue-600 text-white p-2 text-center\">\n            Fluxo de Caixa\n          </th>\n        </tr>\n        <tr>\n          <th className=\"border p-2 text-left bg-blue-50\">Item</th>\n          {generatePeriodHeaders()}\n        </tr>\n      </thead>\n      <tbody>\n        {[\n          'openingCash', 'operatingCashFlow', 'workingCapitalChange', 'cashFromOpsAfterWC',\n          'capitalExpenditures', 'netCashFlowBeforeFinancing', 'changeInDebt',\n          'dividendsPaid', 'cashFlowFromFinancing', 'netChangeInCash', 'closingCash'\n        ].map(key => {\n          const values = calculatedData.map(p => p[key]);\n          return (\n            <tr key={key} className=\"hover:bg-slate-50\">\n              <td className=\"border p-2 font-medium\">{getColumnLabel(key)}</td>\n              {values.map((value, idx) => (\n                <td key={idx} className=\"border p-2 text-right\">\n                  {formatCellValue(key, value)}\n                </td>\n              ))}\n              {values.length > 1 && (\n                <td className=\"border p-2 text-center\">\n                  {getTrendIndicator(values)}\n                </td>\n              )}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n\n  const renderWorkingCapitalTable = () => (\n    <table className=\"min-w-full border-collapse mb-8\">\n      <thead>\n        <tr>\n          <th colSpan={calculatedData.length + 2} className=\"border bg-blue-600 text-white p-2 text-center\">\n            Análise de Capital de Giro\n          </th>\n        </tr>\n        <tr>\n          <th className=\"border p-2 text-left bg-blue-50\">Item</th>\n          {generatePeriodHeaders()}\n        </tr>\n      </thead>\n      <tbody>\n        {[\n          'accountsReceivableValueAvg', 'arDaysDerived',\n          'inventoryValue', 'inventoryDaysInput',\n          'accountsPayableValueAvg', 'apDaysDerived',\n          'workingCapitalValue', 'wcDays', 'workingCapitalChange'\n        ].map(key => {\n          const values = calculatedData.map(p => p[key]);\n          return (\n            <tr key={key} className=\"hover:bg-slate-50\">\n              <td className=\"border p-2 font-medium\">{getColumnLabel(key)}</td>\n              {values.map((value, idx) => (\n                <td key={idx} className=\"border p-2 text-right\">\n                  {formatCellValue(key, value)}\n                </td>\n              ))}\n              {values.length > 1 && (\n                <td className=\"border p-2 text-center\">\n                  {getTrendIndicator(values)}\n                </td>\n              )}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n  \n  const renderBalanceSheetTable = () => (\n    <table className=\"min-w-full border-collapse mb-8\">\n      <thead>\n        <tr>\n          <th colSpan={calculatedData.length + 2} className=\"border bg-blue-600 text-white p-2 text-center\">\n            Balanço Patrimonial (Simplificado)\n          </th>\n        </tr>\n        <tr>\n          <th className=\"border p-2 text-left bg-blue-50\">Item</th>\n          {generatePeriodHeaders()}\n        </tr>\n      </thead>\n      <tbody>\n        <tr className=\"bg-blue-50 font-medium\">\n          <td className=\"border p-2\">Total Ativos</td>\n          {calculatedData.map((period, idx) => (\n            <td key={idx} className=\"border p-2 text-right\">\n              {formatCurrency(period.estimatedTotalAssets)}\n            </td>\n          ))}\n          {calculatedData.length > 1 && (\n            <td className=\"border p-2 text-center\">\n              {getTrendIndicator(calculatedData.map(p => p.estimatedTotalAssets))}\n            </td>\n          )}\n        </tr>\n        {[\n          'closingCash', 'accountsReceivableValueAvg', 'inventoryValue', 'netFixedAssets'\n        ].map(key => {\n          const values = calculatedData.map(p => p[key]);\n          return (\n            <tr key={key} className=\"hover:bg-slate-50\">\n              <td className=\"border p-2 pl-4 font-normal\">{getColumnLabel(key)}</td>\n              {values.map((value, idx) => (\n                <td key={idx} className=\"border p-2 text-right\">\n                  {formatCellValue(key, value)}\n                </td>\n              ))}\n              {values.length > 1 && (\n                <td className=\"border p-2 text-center\">\n                  {getTrendIndicator(values)}\n                </td>\n              )}\n            </tr>\n          );\n        })}\n        \n        <tr className=\"bg-blue-50 font-medium\">\n          <td className=\"border p-2\">Total Passivos + Patrimônio</td>\n          {calculatedData.map((period, idx) => (\n            <td key={idx} className=\"border p-2 text-right\">\n              {formatCurrency(period.estimatedTotalLiabilities + period.equity)}\n            </td>\n          ))}\n          {calculatedData.length > 1 && (\n            <td className=\"border p-2 text-center\">\n              {getTrendIndicator(calculatedData.map(p => p.estimatedTotalLiabilities + p.equity))}\n            </td>\n          )}\n        </tr>\n        {[\n          'accountsPayableValueAvg', 'totalBankLoans', 'equity'\n        ].map(key => {\n          const values = calculatedData.map(p => p[key]);\n          return (\n            <tr key={key} className=\"hover:bg-slate-50\">\n              <td className=\"border p-2 pl-4 font-normal\">{getColumnLabel(key)}</td>\n              {values.map((value, idx) => (\n                <td key={idx} className=\"border p-2 text-right\">\n                  {formatCellValue(key, value)}\n                </td>\n              ))}\n              {values.length > 1 && (\n                <td className=\"border p-2 text-center\">\n                  {getTrendIndicator(values)}\n                </td>\n              )}\n            </tr>\n          );\n        })}\n        \n        <tr className=\"bg-yellow-50\">\n          <td className=\"border p-2\">Diferença de Balanço</td>\n          {calculatedData.map((period, idx) => (\n            <td key={idx} className=\"border p-2 text-right\">\n              {formatCurrency(period.balanceSheetDifference)}\n            </td>\n          ))}\n          <td className=\"border p-2\"></td>\n        </tr>\n      </tbody>\n    </table>\n  );\n\n  return (\n    <section className=\"mt-12\">\n      <div className=\"flex flex-col md:flex-row justify-between items-center mb-4\">\n        <h2 className=\"text-2xl font-bold text-blue-800 mb-3 md:mb-0\">\n          Relatório Gerado\n        </h2>\n        \n        <div className=\"flex flex-wrap justify-center gap-2\">\n          <button \n            className={`px-3 py-1.5 rounded text-sm font-medium \n              ${reportViewMode === 'general' ? 'bg-blue-600 text-white' : 'bg-slate-200 text-slate-700 hover:bg-slate-300'}`}\n            onClick={() => setReportViewMode('general')}\n          >\n            Visão Geral\n          </button>\n          <button \n            className={`px-3 py-1.5 rounded text-sm font-medium \n              ${reportViewMode === 'detailed' ? 'bg-blue-600 text-white' : 'bg-slate-200 text-slate-700 hover:bg-slate-300'}`}\n            onClick={() => setReportViewMode('detailed')}\n          >\n            Visão Detalhada\n          </button>\n          <button \n            className={`px-3 py-1.5 rounded text-sm font-medium \n              ${reportViewMode === 'ai' ? 'bg-green-600 text-white' : 'bg-slate-200 text-slate-700 hover:bg-slate-300'}`}\n            onClick={() => setReportViewMode('ai')}\n          >\n            Resumo IA\n          </button>\n          <button\n            onClick={handleExportPdf}\n            disabled={printingPdf}\n            className=\"px-3 py-1.5 bg-orange-600 text-white font-medium rounded hover:bg-orange-700 transition disabled:opacity-50 flex items-center gap-1\"\n          >\n            {printingPdf ? (\n              <>\n                <svg className=\"animate-spin h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                  <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                </svg>\n                Gerando PDF...\n              </>\n            ) : (\n              <>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                </svg>\n                Exportar PDF\n              </>\n            )}\n          </button>\n        </div>\n      </div>\n\n      {pdfError && (\n        <div className=\"mb-4 p-3 bg-red-100 border-l-4 border-red-500 text-red-700\">\n          <p>Erro ao gerar PDF: {pdfError.message}</p>\n        </div>\n      )}\n      \n      {html2pdfError && (\n        <div className=\"mb-4 p-3 bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700\">\n          <p>Exportação para PDF pode não funcionar: {html2pdfError.message}</p>\n        </div>\n      )}\n\n      <div className=\"mt-4 p-6 bg-white rounded-xl shadow-lg\" ref={reportRef}>\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-2xl font-bold mb-3 text-blue-800\">{companyName}</h1>\n          <h2 className=\"text-xl\">{reportTitle}</h2>\n          <p className=\"text-slate-500 mt-2\">\n            {calculatedData.length} {calculatedData.length === 1 ? PERIOD_TYPES[periodType]?.shortLabel : PERIOD_TYPES[periodType]?.label}\n          </p>\n        </div>\n\n        {/* Report content changes based on selected view mode */}\n        {reportViewMode === 'ai' ? (\n          <AIPanel calculatedData={calculatedData} companyInfo={companyInfo} />\n        ) : (\n          <>\n            {/* General or Detailed mode */}\n            {renderProfitLossTable()}\n            {renderCashFlowTable()}\n            {(reportViewMode === 'detailed') && renderWorkingCapitalTable()}\n            {(reportViewMode === 'detailed') && renderBalanceSheetTable()}\n            \n            {/* Always show the AI panel in PDF mode (for exports) */}\n            {reportViewMode === 'detailed' && (\n              <AIPanel calculatedData={calculatedData} companyInfo={companyInfo} />\n            )}\n          </>\n        )}\n\n        {/* Footer with date stamp */}\n        <div className=\"mt-8 pt-4 border-t text-center text-slate-500 text-sm\">\n          Relatório gerado em {new Date().toLocaleDateString('pt-BR', { \n            year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' \n          })}\n        </div>\n      </div>\n    </section>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}