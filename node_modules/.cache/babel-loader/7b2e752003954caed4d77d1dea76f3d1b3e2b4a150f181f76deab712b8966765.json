{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useLibrary.js\nimport { useState, useCallback } from 'react';\nexport function useLibrary(libraryNameGlobal) {\n  _s();\n  const [library, setLibrary] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const loadLibrary = useCallback(async () => {\n    if (library) return library; // Already \"loaded\" (available)\n\n    setIsLoading(true);\n    setError(null);\n\n    // Simulate a small delay for \"loading\" or to allow scripts to potentially finish loading\n    // In a real scenario, this would be where you might dynamically inject a script tag\n    // if the library wasn't preloaded.\n    await new Promise(resolve => setTimeout(resolve, 50));\n    if (window[libraryNameGlobal]) {\n      const libInstance = window[libraryNameGlobal];\n      setLibrary(() => libInstance); // Use functional update for safety\n      setIsLoading(false);\n      return libInstance;\n    } else {\n      const errMsg = `Biblioteca ${libraryNameGlobal} não encontrada. Verifique se o script CDN está incluído e carregado corretamente na página HTML.`;\n      console.error(errMsg);\n      setError(new Error(errMsg));\n      setIsLoading(false);\n      return null;\n    }\n  }, [library, libraryNameGlobal]);\n\n  // Optional: Reset state if needed\n  const reset = useCallback(() => {\n    setLibrary(null);\n    setError(null);\n    setIsLoading(false);\n  }, []);\n  return {\n    library,\n    loadLibrary,\n    isLoading,\n    error,\n    reset,\n    isAvailable: !!library // Convenience flag\n  };\n}\n_s(useLibrary, \"Y3jxnWTw2L4F74rDhWtvEJBPmoY=\");","map":{"version":3,"names":["useState","useCallback","useLibrary","libraryNameGlobal","_s","library","setLibrary","isLoading","setIsLoading","error","setError","loadLibrary","Promise","resolve","setTimeout","window","libInstance","errMsg","console","Error","reset","isAvailable"],"sources":["/Users/rodrigo/Git Repositories/EnterpriseCashFlow/src/hooks/useLibrary.js"],"sourcesContent":["// src/hooks/useLibrary.js\nimport { useState, useCallback } from 'react';\n\nexport function useLibrary(libraryNameGlobal) {\n  const [library, setLibrary] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const loadLibrary = useCallback(async () => {\n    if (library) return library; // Already \"loaded\" (available)\n\n    setIsLoading(true);\n    setError(null);\n\n    // Simulate a small delay for \"loading\" or to allow scripts to potentially finish loading\n    // In a real scenario, this would be where you might dynamically inject a script tag\n    // if the library wasn't preloaded.\n    await new Promise(resolve => setTimeout(resolve, 50));\n\n    if (window[libraryNameGlobal]) {\n      const libInstance = window[libraryNameGlobal];\n      setLibrary(() => libInstance); // Use functional update for safety\n      setIsLoading(false);\n      return libInstance;\n    } else {\n      const errMsg = `Biblioteca ${libraryNameGlobal} não encontrada. Verifique se o script CDN está incluído e carregado corretamente na página HTML.`;\n      console.error(errMsg);\n      setError(new Error(errMsg));\n      setIsLoading(false);\n      return null;\n    }\n\n  }, [library, libraryNameGlobal]);\n\n  // Optional: Reset state if needed\n  const reset = useCallback(() => {\n    setLibrary(null);\n    setError(null);\n    setIsLoading(false);\n  }, []);\n\n  return {\n    library,\n    loadLibrary,\n    isLoading,\n    error,\n    reset,\n    isAvailable: !!library // Convenience flag\n  };\n}"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,OAAO,SAASC,UAAUA,CAACC,iBAAiB,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,WAAW,GAAGV,WAAW,CAAC,YAAY;IAC1C,IAAII,OAAO,EAAE,OAAOA,OAAO,CAAC,CAAC;;IAE7BG,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;;IAEd;IACA;IACA;IACA,MAAM,IAAIE,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,EAAE,CAAC,CAAC;IAErD,IAAIE,MAAM,CAACZ,iBAAiB,CAAC,EAAE;MAC7B,MAAMa,WAAW,GAAGD,MAAM,CAACZ,iBAAiB,CAAC;MAC7CG,UAAU,CAAC,MAAMU,WAAW,CAAC,CAAC,CAAC;MAC/BR,YAAY,CAAC,KAAK,CAAC;MACnB,OAAOQ,WAAW;IACpB,CAAC,MAAM;MACL,MAAMC,MAAM,GAAG,cAAcd,iBAAiB,mGAAmG;MACjJe,OAAO,CAACT,KAAK,CAACQ,MAAM,CAAC;MACrBP,QAAQ,CAAC,IAAIS,KAAK,CAACF,MAAM,CAAC,CAAC;MAC3BT,YAAY,CAAC,KAAK,CAAC;MACnB,OAAO,IAAI;IACb;EAEF,CAAC,EAAE,CAACH,OAAO,EAAEF,iBAAiB,CAAC,CAAC;;EAEhC;EACA,MAAMiB,KAAK,GAAGnB,WAAW,CAAC,MAAM;IAC9BK,UAAU,CAAC,IAAI,CAAC;IAChBI,QAAQ,CAAC,IAAI,CAAC;IACdF,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLH,OAAO;IACPM,WAAW;IACXJ,SAAS;IACTE,KAAK;IACLW,KAAK;IACLC,WAAW,EAAE,CAAC,CAAChB,OAAO,CAAC;EACzB,CAAC;AACH;AAACD,EAAA,CA9CeF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}