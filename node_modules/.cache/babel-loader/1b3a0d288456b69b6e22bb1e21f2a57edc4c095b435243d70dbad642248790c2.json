{"ast":null,"code":"var _jsxFileName = \"/Users/rodrigo/Git Repositories/EnterpriseCashFlow/src/components/Charts/PnlVisualChart.jsx\";\nimport React from 'react';\nimport { PERIOD_TYPES } from '../../utils/constants';\nimport { formatCurrency } from '../../utils/formatters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PnlVisualChart({\n  calculatedData,\n  periodType\n}) {\n  var _PERIOD_TYPES$periodT;\n  if (typeof window.Recharts === 'undefined') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border rounded-md bg-red-50 text-red-700\",\n      children: \"Erro: Biblioteca de gr\\xE1ficos (Recharts) n\\xE3o carregada.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    BarChart,\n    Bar,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    ResponsiveContainer,\n    LabelList\n  } = window.Recharts;\n  if (!calculatedData || calculatedData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-slate-500 py-4\",\n      children: \"Dados insuficientes para o gr\\xE1fico P&L Visual.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Using data from the latest period for this visual\n  const latestPeriod = calculatedData[calculatedData.length - 1];\n  const pnlData = [{\n    name: 'Receita',\n    value: latestPeriod.revenue,\n    fill: '#3b82f6'\n  },\n  // blue-500\n  {\n    name: 'CPV/CSV',\n    value: -Math.abs(latestPeriod.cogs),\n    fill: '#ef4444'\n  },\n  // red-500 (negative)\n  {\n    name: 'Lucro Bruto',\n    value: latestPeriod.grossProfit,\n    fill: '#10b981',\n    isSubtotal: true\n  },\n  // emerald-500\n  {\n    name: 'Desp. Oper.',\n    value: -Math.abs(latestPeriod.operatingExpenses),\n    fill: '#f97316'\n  },\n  // orange-500 (negative)\n  {\n    name: 'EBIT (Lucro Oper.)',\n    value: latestPeriod.ebit,\n    fill: '#8b5cf6',\n    isSubtotal: true\n  } // violet-500\n  ];\n\n  // For a simplified bar chart representation, not a true waterfall\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded-lg shadow-md border border-slate-200 h-[350px] md:h-[400px] w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-md font-semibold text-slate-700 mb-4 text-center\",\n      children: [\"Demonstrativo de Resultado Visual (\\xDAltimo Per\\xEDodo: \", ((_PERIOD_TYPES$periodT = PERIOD_TYPES[periodType]) === null || _PERIOD_TYPES$periodT === void 0 ? void 0 : _PERIOD_TYPES$periodT.shortLabel) || 'Per.', \" \", calculatedData.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: pnlData,\n        layout: \"vertical\" // More suitable for this kind of flow\n        ,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 50,\n          bottom: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#e0e0e0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          type: \"number\",\n          tickFormatter: tick => formatCurrency(tick, false),\n          tick: {\n            fontSize: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          type: \"category\",\n          dataKey: \"name\",\n          width: 120,\n          tick: {\n            fontSize: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          formatter: value => formatCurrency(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"value\",\n          barSize: 30,\n          children: [pnlData.map((entry, index) => /*#__PURE__*/_jsxDEV(Bar, {\n            fill: entry.fill\n          }, `cell-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(LabelList, {\n            dataKey: \"value\",\n            position: \"right\",\n            formatter: value => formatCurrency(value, false),\n            style: {\n              fontSize: '10px',\n              fill: '#333'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xs text-slate-500 mt-2 text-center\",\n      children: \"Nota: CPV/CSV e Desp. Oper. s\\xE3o mostrados como valores absolutos para o gr\\xE1fico, mas representam redu\\xE7\\xF5es.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = PnlVisualChart;\nvar _c;\n$RefreshReg$(_c, \"PnlVisualChart\");","map":{"version":3,"names":["React","PERIOD_TYPES","formatCurrency","jsxDEV","_jsxDEV","PnlVisualChart","calculatedData","periodType","_PERIOD_TYPES$periodT","window","Recharts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","LabelList","length","latestPeriod","pnlData","name","value","revenue","fill","Math","abs","cogs","grossProfit","isSubtotal","operatingExpenses","ebit","shortLabel","width","height","data","layout","margin","top","right","left","bottom","strokeDasharray","stroke","type","tickFormatter","tick","fontSize","dataKey","formatter","barSize","map","entry","index","position","style","_c","$RefreshReg$"],"sources":["/Users/rodrigo/Git Repositories/EnterpriseCashFlow/src/components/Charts/PnlVisualChart.jsx"],"sourcesContent":["import React from 'react';\nimport { PERIOD_TYPES } from '../../utils/constants';\nimport { formatCurrency } from '../../utils/formatters';\n\nexport default function PnlVisualChart({ calculatedData, periodType }) {\n  if (typeof window.Recharts === 'undefined') {\n    return <div className=\"p-4 border rounded-md bg-red-50 text-red-700\">Erro: Biblioteca de gráficos (Recharts) não carregada.</div>;\n  }\n  const { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, LabelList } = window.Recharts;\n\n  if (!calculatedData || calculatedData.length === 0) {\n    return <p className=\"text-center text-slate-500 py-4\">Dados insuficientes para o gráfico P&L Visual.</p>;\n  }\n\n  // Using data from the latest period for this visual\n  const latestPeriod = calculatedData[calculatedData.length - 1];\n\n  const pnlData = [\n    { name: 'Receita', value: latestPeriod.revenue, fill: '#3b82f6' }, // blue-500\n    { name: 'CPV/CSV', value: -Math.abs(latestPeriod.cogs), fill: '#ef4444' }, // red-500 (negative)\n    { name: 'Lucro Bruto', value: latestPeriod.grossProfit, fill: '#10b981', isSubtotal: true }, // emerald-500\n    { name: 'Desp. Oper.', value: -Math.abs(latestPeriod.operatingExpenses), fill: '#f97316' }, // orange-500 (negative)\n    { name: 'EBIT (Lucro Oper.)', value: latestPeriod.ebit, fill: '#8b5cf6', isSubtotal: true }, // violet-500\n  ];\n\n  // For a simplified bar chart representation, not a true waterfall\n\n  return (\n    <div className=\"bg-white p-4 rounded-lg shadow-md border border-slate-200 h-[350px] md:h-[400px] w-full\">\n      <h4 className=\"text-md font-semibold text-slate-700 mb-4 text-center\">\n        Demonstrativo de Resultado Visual (Último Período: {PERIOD_TYPES[periodType]?.shortLabel || 'Per.'} {calculatedData.length})\n      </h4>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          data={pnlData}\n          layout=\"vertical\" // More suitable for this kind of flow\n          margin={{ top: 5, right: 30, left: 50, bottom: 20 }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e0e0e0\" />\n          <XAxis type=\"number\" tickFormatter={(tick) => formatCurrency(tick, false)} tick={{ fontSize: 10 }}/>\n          <YAxis type=\"category\" dataKey=\"name\" width={120} tick={{ fontSize: 10 }}/>\n          <Tooltip formatter={(value) => formatCurrency(value)} />\n          <Bar dataKey=\"value\" barSize={30}>\n            {pnlData.map((entry, index) => (\n              <Bar key={`cell-${index}`} fill={entry.fill} />\n            ))}\n            <LabelList\n              dataKey=\"value\"\n              position=\"right\"\n              formatter={(value) => formatCurrency(value, false)}\n              style={{ fontSize: '10px', fill: '#333' }}\n            />\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n      <p className=\"text-xs text-slate-500 mt-2 text-center\">Nota: CPV/CSV e Desp. Oper. são mostrados como valores absolutos para o gráfico, mas representam reduções.</p>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}